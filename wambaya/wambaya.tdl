;;; -*- Mode: TDL; Coding: utf-8 -*-
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Grammar of Wambaya
;;; created at:
;;;     Thu Apr 18 17:59:07 UTC 2019
;;; based on Matrix customization system version of:
;;;     Tue Nov 13 21:13:22 UTC 2018
;;;
;;; 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Type assigning empty mod list. Added to basic types for nouns, verbs and determiners.

non-mod-lex-item := lex-item &
  [ SYNSEM.LOCAL.CAT.HEAD.MOD < > ].

;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Matrix Type Addenda
;;;;;;;;;;;;;;;;;;;;;;;;;

head :+ [ PRON bool,
    AUX bool,
    FORM form ].

noun :+ [ CASE case ].

basic-head-comp-phrase :+ [ HEAD-DTR.SYNSEM.LOCAL.CAT.VAL.COMPS.FIRST.OPT - ].

png :+ [ PER person,
    NUM number ].

basic-head-opt-subj-phrase :+ [ HEAD-DTR.SYNSEM.LOCAL.CAT.VAL.COMPS < > ].

;;;;;;;;;;;;;;
;;; Features
;;;;;;;;;;;;;;

;;; Case

case := *top*.
nom := case.  ; nom
erg := case.  ; erg
acc := case.  ; acc
dat := case.  ; dat
loc := case.  ; loc
gen := case.  ; gen

;;; Person

person := *top*.
1st := person.
2nd := person.
3rd := person.

;;; Number

number := *top*.
du := number.
pl := number.

;;; Form

form := *top*.
nonfinite := form.
finite := form.

;;; Tense

pst := tense.
fut := tense.

;;;;;;;;;;;;;;;;;;;
;;; Lexical Types
;;;;;;;;;;;;;;;;;;;

;;; Nouns

noun-lex := basic-noun-lex & basic-one-arg & no-hcons-lex-item & non-mod-lex-item &
  [ SYNSEM.LOCAL.CAT.VAL [ SPR < #spr &
                                 [ LOCAL.CAT.HEAD det ] >,
                           COMPS < >,
                           SUBJ < >,
                           SPEC < > ],
    ARG-ST < #spr > ].

noun1-noun-lex := noun-lex.

noun2-noun-lex := noun-lex & noun-pc2-rule-dtr & noun-pc3-rule-dtr & noun-pc6-rule-dtr.

noun3-noun-lex := noun-lex & noun-pc22-rule-dtr & noun-pc4-rule-dtr & noun-pc6-rule-dtr.

noun4-noun-lex := noun-lex & noun-pc6-rule-dtr.

noun5-noun-lex := noun-lex & noun-pc4-rule-dtr.

noun6-noun-lex := noun-lex & noun-pc8-rule-dtr.

noun7-noun-lex := noun-lex.

noun11-noun-lex := noun-lex.

noun12-noun-lex := noun-lex & noun-pc18-rule-dtr.

noun13-noun-lex := noun-lex.

noun14-noun-lex := noun-lex.

noun17-noun-lex := noun-lex & noun-pc16-rule-dtr.

noun18-noun-lex := noun-lex & noun-pc16-rule-dtr & noun-pc3-rule-dtr & noun-pc4-rule-dtr.

noun20-noun-lex := noun-lex & noun-pc22-rule-dtr.

noun22-noun-lex := noun-lex.

noun25-noun-lex := noun-lex.

noun28-noun-lex := noun-lex.

noun30-noun-lex := noun-lex.

noun31-noun-lex := noun-lex & noun-pc3-rule-dtr.

noun33-noun-lex := noun-lex.

noun36-noun-lex := noun-lex.

noun38-noun-lex := noun-lex & noun-pc22-rule-dtr & noun-pc6-rule-dtr & noun-pc8-rule-dtr.

noun40-noun-lex := noun-lex & noun-pc2-rule-dtr.

noun44-noun-lex := noun-lex.

noun47-noun-lex := noun-lex & noun-pc4-rule-dtr.

noun52-noun-lex := noun-lex.

noun55-noun-lex := noun-lex.

noun57-noun-lex := noun-lex.

noun69-noun-lex := noun-lex.

noun71-noun-lex := noun-lex.

noun74-noun-lex := noun-lex.

noun77-noun-lex := noun-lex.

noun79-noun-lex := noun-lex.

noun82-noun-lex := noun-lex.

;;; Verbs

verb-lex := non-mod-lex-item &
  [ SYNSEM.LOCAL.CAT [ HEAD verb,
                       HC-LIGHT - ] ].

main-verb-lex := verb-lex & basic-verb-lex &
  [ SYNSEM.LOCAL [ CAT [ HEAD.AUX -,
                         VAL [ SPR < >,
                               SPEC < >,
                               SUBJ < #subj > ] ],
                   CONT.HOOK.XARG #xarg ],
    ARG-ST.FIRST #subj &
                 [ LOCAL [ CAT cat-sat &
                               [ VAL [ SPR < >,
                                       COMPS < > ] ],
                           CONT.HOOK.INDEX #xarg ] ] ].

aux-lex := verb-lex &
  [ SYNSEM.LOCAL.CAT.HEAD.AUX + ].

intransitive-verb-lex := main-verb-lex & intransitive-lex-item &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS < >,
    ARG-ST.FIRST.LOCAL.CAT.HEAD noun ].

transitive-verb-lex := main-verb-lex & transitive-lex-item &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS < #comps >,
    ARG-ST < [ LOCAL.CAT.HEAD noun ],
             #comps &
             [ LOCAL.CAT cat-sat &
                         [ VAL [ SPR < >,
                                 COMPS < > ],
                           HEAD noun ] ] > ].

nom-intransitive-verb-lex := intransitive-verb-lex &
  [ ARG-ST.FIRST.LOCAL.CAT.HEAD noun &
                                [ CASE nom ] ].

erg-acc-transitive-verb-lex := transitive-verb-lex &
  [ ARG-ST < [ LOCAL.CAT.HEAD noun &
                              [ CASE erg ] ],
             [ LOCAL.CAT.HEAD noun &
                              [ CASE acc ] ] > ].

verb1-verb-lex := intransitive-verb-lex & verb-pc11-rule-dtr & verb-pc18-rule-dtr & verb-pc2-rule-dtr & verb-pc20-or-verb-pc48-rule-dtr & verb-pc4-rule-dtr & verb-pc6-rule-dtr &
  [ SYNSEM.LOCAL.CAT.VAL.SUBJ.FIRST.LOCAL.CAT.HEAD.CASE nom ].

verb2-verb-lex := intransitive-verb-lex & verb-pc1-rule-dtr & verb-pc15-rule-dtr & verb-pc16-rule-dtr & verb-pc2-rule-dtr & verb-pc4-rule-dtr &
  [ SYNSEM.LOCAL.CAT.VAL.SUBJ.FIRST.LOCAL.CAT.HEAD.CASE nom ].

verb3-verb-lex := intransitive-verb-lex &
  [ SYNSEM.LOCAL.CAT.VAL.SUBJ.FIRST.LOCAL.CAT.HEAD.CASE nom ].

verb4-verb-lex := intransitive-verb-lex & verb-pc11-rule-dtr & verb-pc2-rule-dtr & verb-pc20-or-verb-pc48-rule-dtr & verb-pc4-rule-dtr & verb-pc6-rule-dtr &
  [ SYNSEM.LOCAL.CAT.VAL.SUBJ.FIRST.LOCAL.CAT.HEAD.CASE nom ].

verb5-verb-lex := transitive-verb-lex.

verb6-verb-lex := transitive-verb-lex.

verb7-verb-lex := transitive-verb-lex & verb-pc11-rule-dtr.

verb8-verb-lex := transitive-verb-lex & verb-pc1-rule-dtr & verb-pc15-rule-dtr & verb-pc16-rule-dtr & verb-pc18-rule-dtr & verb-pc2-rule-dtr & verb-pc4-rule-dtr &
  [ SYNSEM.LOCAL.CAT.VAL [ SUBJ.FIRST.LOCAL.CAT.HEAD.CASE nom,
                           COMPS.FIRST.LOCAL.CAT.HEAD.CASE acc ] ].

verb9-verb-lex := intransitive-verb-lex & verb-pc26-rule-dtr &
  [ SYNSEM.LOCAL.CAT.VAL.SUBJ.FIRST.LOCAL.CAT.HEAD.CASE nom ].

verb10-verb-lex := intransitive-verb-lex & verb-pc26-rule-dtr & verb-pc28-rule-dtr &
  [ SYNSEM.LOCAL.CAT.VAL.SUBJ.FIRST.LOCAL.CAT.HEAD.CASE nom ].

verb11-verb-lex := intransitive-verb-lex & verb-pc26-rule-dtr &
  [ SYNSEM.LOCAL.CAT.VAL.SUBJ.FIRST.LOCAL.CAT.HEAD.CASE nom ].

verb12-verb-lex := intransitive-verb-lex &
  [ SYNSEM.LOCAL.CAT.VAL.SUBJ.FIRST.LOCAL.CAT.HEAD.CASE nom ].

verb14-verb-lex := transitive-verb-lex.

verb15-verb-lex := intransitive-verb-lex &
  [ SYNSEM.LOCAL.CAT.VAL.SUBJ.FIRST.LOCAL.CAT.HEAD.CASE nom ].

verb17-verb-lex := transitive-verb-lex & verb-pc26-rule-dtr &
  [ SYNSEM.LOCAL.CAT.VAL [ SUBJ.FIRST.LOCAL.CAT.HEAD.CASE nom,
                           COMPS.FIRST.LOCAL.CAT.HEAD.CASE acc ] ].

verb19-verb-lex := intransitive-verb-lex & verb-pc26-rule-dtr &
  [ SYNSEM.LOCAL.CAT.VAL.SUBJ.FIRST.LOCAL.CAT.HEAD.CASE nom ].

;;; Auxiliaries

arg-comp-aux := aux-lex & basic-two-arg &
  [ SYNSEM.LOCAL [ CAT.VAL [ SPR < >,
                             SPEC < >,
                             COMPS < #comps . #vcomps >,
                             SUBJ < #subj > ],
                   CONT.HOOK.XARG #xarg ],
    ARG-ST < #subj &
             [ LOCAL [ CAT [ HEAD noun &
                                  [ CASE #case ],
                             VAL [ SUBJ < >,
                                   SPR < >,
                                   SPEC < >,
                                   COMPS < > ] ],
                       CONT.HOOK.INDEX #xarg ] ],
             #comps &
             [ LIGHT +,
               LOCAL [ CONT.HOOK.XARG #xarg,
                       CAT [ HEAD verb,
                             VAL [ COMPS #vcomps,
                                   SUBJ < [ LOCAL.CAT.HEAD.CASE #case ] > ] ] ] ] > ].

; Somewhat surprisingly, this inherits from basic-two-arg, so
; that the non-local features are amalgamated from subj, the
; lexical verb complement, but not the other complements, if any.

; Note that raise-sem-lex-item assumes the first complement is
; where the HOOK comes from.  It's not clear to me how you'd
; tell that you had an argument composition auxiliary if it
; wasn't appearing adjacent to the verb.

; To keep the semantically empty ones from spinning on
; generation, require complement to be [AUX -].  The
; FORM feature might be enough in the starter grammars,
; but I don't want to rely on this.  Then again, [ AUX - ]
; might not be true.

arg-comp-aux-no-pred := arg-comp-aux & raise-sem-lex-item &
  [ ARG-ST < [ ],
             [ LOCAL.CAT.HEAD.AUX - ] > ].

aux1-aux-lex := arg-comp-aux-no-pred &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS.FIRST.LOCAL.CAT.HEAD.FORM finite ].

;;; Complementizers

;;; Others

;;; Determiners
;;; SPEC is non-empty, and already specified by basic-determiner-lex.

determiner-lex := basic-determiner-lex & norm-zero-arg & non-mod-lex-item &
  [ SYNSEM.LOCAL.CAT.VAL [ SPR < >,
                           COMPS < >,
                           SUBJ < > ] ].

;;;;;;;;;;;;;;;;;;;
;;; Lexical Rules
;;;;;;;;;;;;;;;;;;;

;;; Intermediate rule types

verb-pc16-rule-dtr := word-or-lexrule.
verb-pc28-rule-dtr := word-or-lexrule.
noun-pc8-rule-dtr := word-or-lexrule.
verb-pc15-rule-dtr := word-or-lexrule.
verb-pc1-rule-dtr := word-or-lexrule.
verb-pc18-rule-dtr := word-or-lexrule.
verb-pc6-rule-dtr := word-or-lexrule.
noun-pc22-rule-dtr := word-or-lexrule.
verb-pc26-rule-dtr := word-or-lexrule.
noun-pc3-rule-dtr := word-or-lexrule.
noun-pc4-rule-dtr := word-or-lexrule.
noun-pc18-rule-dtr := word-or-lexrule.
verb-pc4-rule-dtr := word-or-lexrule.
verb-pc2-rule-dtr := word-or-lexrule.
noun-pc2-rule-dtr := word-or-lexrule.
noun-pc16-rule-dtr := word-or-lexrule.
noun-pc6-rule-dtr := word-or-lexrule.
verb-pc11-rule-dtr := word-or-lexrule.
verb-pc20-or-verb-pc48-rule-dtr := word-or-lexrule.

;;; Lexical rule types

noun-pc1-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR noun1-noun-lex ].

noun-pc1_lrt1-lex-rule := noun-pc1-lex-rule-super &
  [ SYNSEM.LOCAL [ CONT.HOOK.INDEX.PNG.NUM du,
                   CAT.HEAD.CASE nom ] ].

noun-pc2-lex-rule-super := add-only-no-ccont-rule &
  [ DTR noun-pc2-rule-dtr ].

noun-pc2_lrt1-lex-rule := const-lex-rule & noun-pc2-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.HEAD.CASE nom ].

noun-pc2_lrt2-lex-rule := infl-lex-rule & noun-pc2-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.HEAD.CASE gen ].

noun-pc2_lrt3_na-lex-rule := const-lex-rule & noun-pc2-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.HEAD.CASE acc ].

noun-pc2_lrt4-lex-rule := const-lex-rule & noun-pc2-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.HEAD.CASE loc ].

noun-pc2_lrt3_a-lex-rule := infl-lex-rule & noun-pc2-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.HEAD.CASE acc ].

noun-pc3-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR noun-pc3-rule-dtr ].

noun-pc3_lrt1-lex-rule := noun-pc3-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.HEAD.CASE nom ].

noun-pc4-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR noun-pc4-rule-dtr ].

noun-pc4_lrt1-lex-rule := noun-pc4-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.HEAD.CASE loc ].

noun-pc5-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule & noun-pc4-rule-dtr &
  [ DTR noun3-noun-lex ].

noun-pc5_lrt1-lex-rule := noun-pc5-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.HEAD.CASE gen ].

noun-pc6-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR noun-pc6-rule-dtr ].

noun-pc6_lrt1-lex-rule := noun-pc6-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.HEAD.CASE dat ].

noun-pc8-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR noun-pc8-rule-dtr ].

noun-pc8_lrt1-lex-rule := noun-pc8-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.HEAD.CASE loc ].

noun-pc8_lrt2-lex-rule := noun-pc8-lex-rule-super.

noun-pc9-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR noun7-noun-lex ].

noun-pc9_lrt1-lex-rule := noun-pc9-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.HEAD.CASE gen ].

noun-pc10-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR noun11-noun-lex ].

noun-pc10_lrt1-lex-rule := noun-pc10-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.HEAD.CASE nom ].

noun-pc11-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule & noun-pc18-rule-dtr &
  [ DTR noun12-noun-lex ].

noun-pc11_lrt1-lex-rule := noun-pc11-lex-rule-super.

noun-pc13-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR noun13-noun-lex ].

noun-pc13_lrt1-lex-rule := noun-pc13-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.HEAD.CASE loc ].

noun-pc13_lrt2-lex-rule := noun-pc13-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.HEAD.CASE dat ].

noun-pc14-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR noun14-noun-lex ].

noun-pc14_lrt1-lex-rule := noun-pc14-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.HEAD.CASE nom ].

noun-pc16-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR noun-pc16-rule-dtr ].

noun-pc16_lrt1-lex-rule := noun-pc16-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.HEAD.CASE loc ].

noun-pc18-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR noun-pc18-rule-dtr ].

noun-pc18_lrt1-lex-rule := noun-pc18-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.HEAD.CASE acc ].

noun-pc18_lrt2-lex-rule := noun-pc18-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.HEAD.CASE nom ].

noun-pc18_lrt3-lex-rule := noun-pc18-lex-rule-super.

noun-pc22-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR noun-pc22-rule-dtr ].

noun-pc22_lrt1-lex-rule := noun-pc22-lex-rule-super.

noun-pc24-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR noun22-noun-lex ].

noun-pc24_lrt1-lex-rule := noun-pc24-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.HEAD.CASE acc ].

noun-pc25-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR noun47-noun-lex ].

noun-pc25_lrt1-lex-rule := noun-pc25-lex-rule-super.

noun-pc26-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR noun25-noun-lex ].

noun-pc26_lrt1-lex-rule := noun-pc26-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.HEAD.CASE nom ].

noun-pc27-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR noun28-noun-lex ].

noun-pc27_lrt1-lex-rule := noun-pc27-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.HEAD.CASE nom ].

noun-pc28-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR noun30-noun-lex ].

noun-pc28_lrt1-lex-rule := noun-pc28-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.HEAD.CASE acc ].

noun-pc29-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR noun33-noun-lex ].

noun-pc29_lrt1-lex-rule := noun-pc29-lex-rule-super.

noun-pc30-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR noun5-noun-lex ].

noun-pc30_lrt1-lex-rule := noun-pc30-lex-rule-super.

noun-pc31-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR noun36-noun-lex ].

noun-pc31_lrt1-lex-rule := noun-pc31-lex-rule-super &
  [ SYNSEM.LOCAL [ CONT.HOOK.INDEX.PNG.NUM pl,
                   CAT.HEAD.CASE nom ] ].

noun-pc33-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR noun44-noun-lex ].

noun-pc33_lrt1-lex-rule := noun-pc33-lex-rule-super &
  [ SYNSEM.LOCAL [ CONT.HOOK.INDEX.PNG.NUM du,
                   CAT.HEAD.CASE acc ] ].

noun-pc35-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR noun52-noun-lex ].

noun-pc35_lrt1-lex-rule := noun-pc35-lex-rule-super &
  [ SYNSEM.LOCAL [ CONT.HOOK.INDEX.PNG.NUM du,
                   CAT.HEAD.CASE acc ] ].

noun-pc36-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR noun55-noun-lex ].

noun-pc36_lrt1-lex-rule := noun-pc36-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.HEAD.CASE nom ].

noun-pc37-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR noun57-noun-lex ].

noun-pc37_lrt1-lex-rule := noun-pc37-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.HEAD.CASE nom ].

noun-pc39-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR noun28-noun-lex ].

noun-pc39_lrt1-lex-rule := noun-pc39-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.HEAD.CASE nom ].

noun-pc41-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR noun69-noun-lex ].

noun-pc41_lrt1-lex-rule := noun-pc41-lex-rule-super &
  [ SYNSEM.LOCAL [ CONT.HOOK.INDEX.PNG.NUM pl,
                   CAT.HEAD.CASE acc ] ].

noun-pc42-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR noun71-noun-lex ].

noun-pc42_lrt1-lex-rule := noun-pc42-lex-rule-super &
  [ SYNSEM.LOCAL [ CONT.HOOK.INDEX.PNG.NUM du,
                   CAT.HEAD.CASE nom ] ].

noun-pc43-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR noun74-noun-lex ].

noun-pc43_lrt1-lex-rule := noun-pc43-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.HEAD.CASE nom ].

noun-pc45-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR noun77-noun-lex ].

noun-pc45_lrt1-lex-rule := noun-pc45-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.HEAD.CASE acc ].

noun-pc47-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR noun79-noun-lex ].

noun-pc47_lrt1-lex-rule := noun-pc47-lex-rule-super &
  [ SYNSEM.LOCAL [ CONT.HOOK.INDEX.PNG.NUM du,
                   CAT.HEAD.CASE nom ] ].

noun-pc48-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR noun82-noun-lex ].

noun-pc48_lrt1-lex-rule := noun-pc48-lex-rule-super.

verb-pc1-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule & verb-pc15-rule-dtr & verb-pc16-rule-dtr & verb-pc2-rule-dtr & verb-pc4-rule-dtr &
  [ DTR verb-pc1-rule-dtr ].

verb-pc1_lrt1-lex-rule := verb-pc1-lex-rule-super.

verb-pc2-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR verb-pc2-rule-dtr ].

verb-pc2_lrt1-lex-rule := verb-pc2-lex-rule-super.

verb-pc4-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR verb-pc4-rule-dtr ].

verb-pc4_lrt1-lex-rule := verb-pc4-lex-rule-super &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.E.TENSE fut ].

verb-pc5-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR verb3-verb-lex ].

verb-pc5_lrt1-lex-rule := verb-pc5-lex-rule-super.

verb-pc6-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule & verb-pc11-rule-dtr & verb-pc2-rule-dtr & verb-pc20-or-verb-pc48-rule-dtr & verb-pc4-rule-dtr &
  [ DTR verb-pc6-rule-dtr ].

verb-pc6_lrt1-lex-rule := verb-pc6-lex-rule-super.

verb-pc8-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR verb5-verb-lex ].

verb-pc8_lrt1-lex-rule := verb-pc8-lex-rule-super.

verb-pc10-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR verb6-verb-lex ].

verb-pc10_lrt1-lex-rule := verb-pc10-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.VAL.SUBJ.FIRST.LOCAL.CONT.HOOK.INDEX.PNG.NUM pl ].

verb-pc11-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR verb-pc11-rule-dtr ].

verb-pc11_lrt1-lex-rule := verb-pc11-lex-rule-super.

verb-pc15-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule & verb-pc16-rule-dtr & verb-pc4-rule-dtr &
  [ DTR verb-pc15-rule-dtr ].

verb-pc15_lrt1-lex-rule := verb-pc15-lex-rule-super.

verb-pc16-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR verb-pc16-rule-dtr ].

verb-pc16_lrt1-lex-rule := verb-pc16-lex-rule-super.

verb-pc18-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule & verb-pc4-rule-dtr &
  [ DTR verb-pc18-rule-dtr ].

verb-pc18_lrt1-lex-rule := verb-pc18-lex-rule-super.

verb-pc20-lex-rule-super := add-only-no-ccont-rule &
  [ DTR verb-pc20-or-verb-pc48-rule-dtr ].

verb-pc20_lrt1-lex-rule := infl-lex-rule & verb-pc20-lex-rule-super.

verb-pc20_lrt2-lex-rule := const-lex-rule & verb-pc20-lex-rule-super &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.E.TENSE fut ].

verb-pc20_lrt3-lex-rule := const-lex-rule & verb-pc20-lex-rule-super &
  [ SYNSEM.LOCAL [ CAT.VAL.SUBJ.FIRST.LOCAL.CONT.HOOK.INDEX.PNG.PER 1st,
                   CONT.HOOK.INDEX.E.TENSE fut ] ].

verb-pc22-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR verb9-verb-lex ].

verb-pc22_lrt1-lex-rule := verb-pc22-lex-rule-super &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.E.TENSE pst ].

verb-pc22_lrt2-lex-rule := verb-pc22-lex-rule-super.

verb-pc26-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR verb-pc26-rule-dtr ].

verb-pc26_lrt1-lex-rule := verb-pc26-lex-rule-super &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.E.TENSE fut ].

verb-pc27-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule & verb-pc26-rule-dtr & verb-pc28-rule-dtr &
  [ DTR verb10-verb-lex ].

verb-pc27_lrt1-lex-rule := verb-pc27-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.VAL.SUBJ.FIRST.LOCAL.CONT.HOOK.INDEX.PNG.PER 1st ].

verb-pc28-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR verb-pc28-rule-dtr ].

verb-pc28_lrt1-lex-rule := verb-pc28-lex-rule-super.

verb-pc30-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR verb11-verb-lex ].

verb-pc30_lrt1-lex-rule := verb-pc30-lex-rule-super.

verb-pc33-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR verb12-verb-lex ].

verb-pc33_lrt1-lex-rule := verb-pc33-lex-rule-super &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.E.TENSE fut ].

verb-pc39-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR verb14-verb-lex ].

verb-pc39_lrt1-lex-rule := verb-pc39-lex-rule-super.

verb-pc41-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR verb15-verb-lex ].

verb-pc41_lrt1-lex-rule := verb-pc41-lex-rule-super.

verb-pc42-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ DTR verb19-verb-lex ].

verb-pc42_lrt1-lex-rule := verb-pc42-lex-rule-super &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.E.TENSE fut ].

verb-pc45-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule & verb-pc26-rule-dtr &
  [ DTR verb19-verb-lex ].

verb-pc45_lrt1-lex-rule := verb-pc45-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.VAL.SUBJ.FIRST.LOCAL.CONT.HOOK.INDEX.PNG [ PER 3rd,
                                                                NUM du ] ].

verb-pc48-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule & verb-pc11-rule-dtr &
  [ DTR verb-pc20-or-verb-pc48-rule-dtr ].

verb-pc48_lrt1-lex-rule := verb-pc48-lex-rule-super.

;;;;;;;;;;;;;;;;;;;
;;; Phrasal Types
;;;;;;;;;;;;;;;;;;;

verbal-head-nexus := headed-phrase &
  [ SYNSEM.LOCAL.CAT.HEAD verb ].

head-initial-head-nexus := head-initial &
  [ SYNSEM.LOCAL.CAT.MC na & #mc,
    HEAD-DTR.SYNSEM.LOCAL.CAT.MC #mc ].

head-final-head-nexus := head-final &
  [ SYNSEM.LOCAL.CAT.MC bool,
    HEAD-DTR.SYNSEM.LOCAL.CAT.MC na ].

head-subj-phrase := decl-head-subj-phrase & head-initial-head-nexus.

subj-head-phrase := decl-head-subj-phrase & head-final-head-nexus.

head-comp-phrase := basic-head-1st-comp-phrase & head-initial-head-nexus.

comp-head-phrase := basic-head-1st-comp-phrase & head-final-head-nexus.

head-comp-phrase-2 := basic-head-2nd-comp-phrase & head-initial-head-nexus.

comp-head-phrase-2 := basic-head-2nd-comp-phrase & head-final-head-nexus.

; Rules for building NPs.  Note that the Matrix uses SPR for
; the specifier of nouns and SUBJ for the subject (specifier) of verbs.

head-spec-phrase := basic-head-spec-phrase & head-final.

; Bare NP phrase.  Consider modifying the PRED value of the quantifier relation
; introduced to match the semantic effect of bare NPs in your language.

bare-np-phrase := basic-bare-np-phrase &
  [ C-CONT.RELS <! [ PRED "exist_q_rel" ] !> ].
